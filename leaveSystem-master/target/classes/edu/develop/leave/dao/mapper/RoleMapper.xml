<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.develop.leave.dao.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="edu.develop.leave.model.RoleModel">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="leader_id" jdbcType="INTEGER" property="leaderId" />
    <result column="student_id" jdbcType="BIGINT" property="studentId" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, leader_id, student_id, teacher_id, role_name, msg
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="role_id" keyProperty="roleId" parameterType="edu.develop.leave.model.RoleModel" useGeneratedKeys="true">
    insert into role (leader_id, student_id, teacher_id, 
      role_name, msg)
    values (#{leaderId,jdbcType=INTEGER}, #{studentId,jdbcType=BIGINT}, #{teacherId,jdbcType=INTEGER}, 
      #{roleName,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="role_id" keyProperty="roleId" parameterType="edu.develop.leave.model.RoleModel" useGeneratedKeys="true">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="leaderId != null">
        leader_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="msg != null">
        msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="leaderId != null">
        #{leaderId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.develop.leave.model.RoleModel">
    update role
    <set>
      <if test="leaderId != null">
        leader_id = #{leaderId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.develop.leave.model.RoleModel">
    update role
    set leader_id = #{leaderId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=BIGINT},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <!--供通用接口使用-->
  <!--根据条件查找数据条数-->
  <select id="queryAmount" resultType="long" >
    SELECT
    count(*)
    FROM
    `role`
    <if test="conditions != null">
      where ${conditions}
    </if>
  </select>

  <!--根据条件查找数据-->
  <select id="queryByCondition" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    `role`
    <if test="conditions != null">
      where ${conditions}
    </if>
    <if test="limit != -1 and limit != -1">
      limit #{offset,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
    </if>
  </select>

  <delete id="deletes" parameterType="Integer[]">
    delete from `role` where role_id in
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
</mapper>